numpy
의견 1. 좀 많이 편리한 배열

pandas
의견 1. 데이터시트를 정리함

sklearn
의견 1. learn => 기계학습을 담당하지 않을까

matplotlib
의견 1: plot이 포함되어 있어 시각화를 담당하는 라이브러리일 것이다

housing.info()에서
전체가 20640개로 결측치가 없다는 것을 알 수 있다.
total_bedrooms에서는 20433개로 결측치가 있다.

housing.describe()에서
75%와 max간의 격차가 큰 컬럼에는 이상치가 있다는 것을 확인할 수 있다.

ocean_proximity값은 object타입 범주형 데이터, 해당 데이터를 무엇을 기준으로 수치화 할지?
의견 1. 12345와같은 각 범주별로 값을 매긴다?
의견 2. 범주를 숫자로 바꿀 시, 숫자로 이루어진 범주에 불과하니 해당 값으로 수치를 계산하기 힘들 것 같다. 따라서 각 범주별 가격 평균을 기준으로 값들을 매긴다?

test_set 나누는데에 있어서 과적합을 방지하는 방법
문제점 : 여기서 문제는 np.random.permutation(len(data))로 인덱스를 랜덤으로 하기 때문에 train이나 test에 특정 데이터 카테고리가 몰려 과적합이
생길 수 있어 정확도가 떨어질 수 있다.

해결책 : 해결방법은 데이터를 8:2로 나누기 전에 각 카테고리로 그룹화를 한 후에 각 카테고리로 8:2로 나누어 train과 test의 카테고리 비율을 유지한다.

결론 : 데이터를 나누는데에 있어 비율은 크게 중요하지 않고 특정 데이터 카테고리가 몰려 발생할 수 있는 과적합 문제에 대해서는 카테고리별로 그룹화를 해 각 그룹에서 데이터 비율을 나누는것으로 해결할 수 있다.
